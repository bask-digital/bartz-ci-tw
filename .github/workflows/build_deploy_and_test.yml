name: Build, deploy and test
on: push
defaults:
  run:
    shell: bash
env:
  TZ: "/usr/share/zoneinfo/America/Los_Angeles"
  NOTIFY: 'scripts/github/add-commit-comment {project} {sha} "Created multidev environment [{site}#{env}]({dashboard-url})." {site-url}'
  TERM: dumb
  ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
  ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
  GITHUB_TOKEN: ${{ github.token }}
  TERMINUS_TOKEN: ${{ secrets.TERMINUS_TOKEN }}
  TEST_SITE_NAME: ${{ secrets.TERMINUS_SITE }}
  BASH_ENV: "./bash_env.txt"
  CI_BRANCH: ${{ github.ref }}
  COMMIT_SHA: ${{ github.sha }}
  CI_BUILD_NUMBER: ${{ github.run_number }}
  DEFAULT_SITE: ${{ secrets.TERMINUS_SITE }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  GITHUB_OWNER: ${{ github.repository_owner }}
  CI_PROJECT_NAME: ${{ github.repository }}

jobs:
  configure_env_vars:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache bash_env.txt
        uses: actions/cache@v3
        env:
          cache-name: cache-bash-env
        with:
          path: bash_env.txt
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.run_number }}
      - name: setup-environment-vars
        run: |
          # Your setup environment variables script

  build_php:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache composer cache
        uses: actions/cache@v3
        env:
          cache-name: cache-composer-cache
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache vendor folder
        uses: actions/cache@v3
        env:
          cache-name: cache-vendor
        with:
          path: ./vendor
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('composer.lock') }}
      - name: Cache web folder
        uses: actions/cache@v3
        env:
          cache-name: cache-web
        with:
          path: ./web
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('composer.lock') }}
      - name: Cache drush folder
        uses: actions/cache@v3
        env:
          cache-name: cache-drush
        with:
          path: ./drush
          key: ${{ runner.os }}-build-${{ env.cache-name }}
      - name: setup-environment-vars
        run: /build-tools-ci/scripts/set-environment
      - name: run PHP build step
        run: ./.ci/build/php

  deploy_to_pantheon:
    runs-on: ubuntu-latest
    needs: [configure_env_vars, build_php]
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache bash_env.txt
        uses: actions/cache@v3
        env:
          cache-name: cache-bash-env
        with:
          path: bash_env.txt
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache composer cache
        uses: actions/cache@v3
        env:
          cache-name: cache-composer-cache
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache vendor folder
        uses: actions/cache@v3
        env:
          cache-name: cache-vendor
        with:
          path: ./vendor
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('composer.lock') }}
      - name: Cache web folder
        uses: actions/cache@v3
        env:
          cache-name: cache-web
        with:
          path: ./web
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('composer.lock') }}
      - name: Cache drush folder
        uses: actions/cache@v3
        env:
          cache-name: cache-drush
        with:
          path: ./drush
          key: ${{ runner.os }}-build-${{ env.cache-name }}
      - name: setup-environment-vars
        run: /build-tools-ci/scripts/set-environment
      - name: sync build artifact
        run: rsync -rz ./web ./vendor .
      - name: deploy to Pantheon
        run: |
          echo "$SSH_PRIVATE_KEY" > ../private.key
          chmod 600 ../private.key
          eval `ssh-agent -s`
          ssh-add ../private.key
          source $BASH_ENV
          ./.ci/deploy/pantheon/dev-multidev
